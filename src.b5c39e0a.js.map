{"version":3,"sources":["src/index.js"],"names":["LightBox","config","modal","groupItems","preview","overflow","arrowLeft","arrowRight","items","document","querySelectorAll","length","init","renderModal","forEach","item","addEventListener","itemHandler","e","code","classList","contains","modalClose","dataset","lbItemGroup","renderGroupItems","renderItem","querySelector","insertAdjacentHTML","groupName","count","reduce","prev","curr","lbItemIndex","push","renderNextPrev","renderPreview","data","tagName","toLowerCase","name","lbItemName","description","lbItemDesc","src","lbItemSrc","group","index","html","createEl","wrapper","renderDescription","innerHTML","insertAdjacentElement","modalShow","itemEvents","modalFooter","removePreview","previews","map","join","switchActivePreview","previewHandler","scrollToActivePreview","currentItemIndex","lbCurrentItemIndex","remove","currentItem","add","scrollIntoView","behavior","inline","lbPreviewIndex","clientWidth","scrollWidth","style","justifyContent","previewEvents","modalPreview","next","nextPrevHandler","navs","nav","direction","currentIndex","selector","cls","el","createElement","setAttribute","close","reset","removeNextPrev","startX","toggle","xDown","evt","firstTouch","getTouches","touches","originalEvent","clientX","preventDefault","x","xUp","xDiff","isDown","scrollLeft","deltaY","pageX","walk","offsetLeft"],"mappings":";AAyfA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAzfMA,IAAAA,EAAAA,WACqB,SAAA,IAAbC,IAAAA,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GAClBC,KAAAA,MAAQ,KACRC,KAAAA,WAAa,KACbC,KAAAA,QAAUH,EAAOG,UAAW,EAC5BC,KAAAA,SAAWJ,EAAOI,WAAY,EAC9BC,KAAAA,UAAYL,EAAOK,WAAa,GAChCC,KAAAA,WAAaN,EAAOM,YAAc,GAClCC,KAAAA,MAAQC,SAASC,iBAAiB,kBAEnC,KAAKF,MAAMG,OAAS,GAAG,KAAKC,OA+epC,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA3eE,MAAA,WAAO,IAAA,EAAA,KAEAC,KAAAA,cAGAL,KAAAA,MAAMM,QAAQ,SAACC,GAClBA,EAAKC,iBAAiB,QAAS,WAAM,OAAA,EAAKC,YAAYF,OAKxDN,SAASO,iBAAiB,UAAW,SAACE,GACrB,WAAXA,EAAEC,MAAqB,EAAKjB,MAAMkB,UAAUC,SAAS,WACvD,EAAKC,iBA8db,CAAA,IAAA,cAxdE,MAAA,SAAYP,GACN,IAAC,KAAKb,MAAO,OAAO,EAGpBa,EAAKQ,QAAQC,aAA4C,KAA7BT,EAAKQ,QAAQC,YACtCC,KAAAA,iBAAiBV,GAGjBW,KAAAA,WAAWX,KAgdtB,CAAA,IAAA,cA3cE,MAAA,WACeN,SAASkB,cAAc,QAwB/BC,mBAAmB,YAvBxB,koBA0BK1B,KAAAA,MAAQO,SAASkB,cAAc,aAG/BL,KAAAA,eA4aT,CAAA,IAAA,mBAxaE,MAAA,SAAiBP,GACTc,IAAAA,EAAYd,EAAKQ,QAAQC,YACzBhB,EAAY,EAAA,KAAKA,OACnBsB,EAAQ,EACP3B,KAAAA,WAAaK,EAAMuB,OAAO,SAACC,EAAMC,GAM7BD,OALHC,EAAKV,QAAQC,cAAgBK,IAC/BI,EAAKV,QAAQW,YAAiBJ,GAAAA,OAAAA,GAC9BE,EAAKG,KAAKF,GACVH,KAEKE,GACN,IAGEN,KAAAA,WAAWX,GAGXqB,KAAAA,iBAGAC,KAAAA,kBAoZT,CAAA,IAAA,aAhZE,MAAA,SAAWtB,GACHuB,IAAAA,EAAO,CACXC,QAASxB,EAAKwB,QAAQC,cACtBC,KAAM1B,EAAKQ,QAAQmB,aAAc,EACjCC,YAAa5B,EAAKQ,QAAQqB,aAAc,EACxCC,IAAK9B,EAAKQ,QAAQuB,YAAa,EAC/BC,MAAOhC,EAAKQ,QAAQC,cAAe,EACnCwB,MAAOjC,EAAKQ,QAAQW,cAAe,GAE/Be,EAAO,KAAKC,SAASZ,EAAKC,QAASD,EAAKO,IAAKP,EAAKU,MAAO,CAC7D,mBAEIG,EAAU1C,SAASkB,cAAc,wBAGlCyB,KAAAA,kBAAkBd,GAEvBa,EAAQE,UAAY,GACpBF,EAAQG,sBAAsB,aAAcL,GAEvCM,KAAAA,UAAUjB,GAGVkB,KAAAA,WAAWP,KAyXpB,CAAA,IAAA,oBArXE,MAAA,SAAkBX,GACVa,IAAAA,EAAU,KAAKjD,MAAMyB,cAAc,wBACzCwB,EAAQE,UAAY,GAGhBf,EAAKG,MACPU,EAAQvB,mBACN,aAC2CU,2CAAAA,OAAAA,EAAKG,KAFlD,WAOEH,EAAKK,aACPQ,EAAQvB,mBACN,YAC0CU,0CAAAA,OAAAA,EAAKK,YAFjD,aAuWN,CAAA,IAAA,gBA/VE,MAAA,WACM,GAAA,KAAKvC,QAAS,CACVI,IAAAA,EAAQ,KAAKL,WACbsD,EAAc,KAAKvD,MAAMyB,cAAc,qBAGxC+B,KAAAA,gBAECC,IAAAA,EAAWnD,EACdoD,IACC,SAAC7C,EAAMiC,GACyDA,MAAAA,8DAAAA,OAAAA,EAAuCjC,oCAAAA,OAAAA,EAAK8B,IAD5G,iBAGDgB,KAAK,IACFZ,EAAyCU,kCAAAA,OAAAA,EAA/C,UAGAF,EAAY7B,mBAAmB,YAAaqB,GAGvCa,KAAAA,sBAGAC,KAAAA,iBAGAC,KAAAA,2BAqUX,CAAA,IAAA,sBAhUE,MAAA,WACM,GAAA,KAAK5D,QAAS,CACVI,IAAAA,EAAQ,KAAKN,MAAMQ,iBAAiB,2BACpCuD,EAAmB,KAAK/D,MAAMyB,cAClC,gCACAJ,QAAQ2C,mBAGV1D,EAAMM,QAAQ,SAACC,GAASA,OAAAA,EAAKK,UAAU+C,OAAO,YAGxCC,IAAAA,EAAc,KAAKlE,MAAMyB,cACFsC,2BAAAA,OAAAA,EAD7B,OAKAG,EAAYhD,UAAUiD,IAAI,UAG1BD,EAAYE,eAAe,CAAEC,SAAU,SAAUC,OAAQ,cA6S/D,CAAA,IAAA,iBAxSE,MAAA,WAAiB,IAAA,EAAA,KACTrE,EAAa,KAAKA,WAClBgD,EAAU,KAAKjD,MAAMyB,cAAc,sBACxBwB,EAAQzC,iBAAiB,2BAGjCI,QAAQ,SAACC,GAChBA,OAAAA,EAAKC,iBAAiB,QAAS,WAEzB,IAACD,EAAKK,UAAUC,SAAS,UAAW,CAChC2B,IAAAA,EAAQjC,EAAKQ,QAAQkD,eAG3B,EAAK/C,WAAWvB,EAAW6C,IAG3B,EAAKc,2BAMPX,EAAQuB,YAAc,GAAKvB,EAAQwB,cACrCxB,EAAQyB,MAAMC,eAAiB,QAG1BC,KAAAA,cAAc3B,MA8QzB,CAAA,IAAA,gBAzQE,MAAA,WACQM,IACAsB,EADc,KAAK7E,MAAMyB,cAAc,qBACZA,cAAc,sBAE3CoD,GAAcA,EAAaZ,WAqQnC,CAAA,IAAA,iBAjQE,MAAA,WAAiB,IAAA,EAAA,KACT7D,EAA+B,KAAnB,KAAKA,UAAmB,WAAa,KAAKA,UACtDC,EAAiC,KAApB,KAAKA,WAAoB,WAAa,KAAKA,WAGxDyE,EAAO,KAAK9B,SAAS,OAAO,GAAO,EAAO,CAC9C,gBACA,wBAEF8B,EAAKhE,iBAAiB,QAAS,WAAM,OAAA,EAAKiE,gBAAgB,UAC1DD,EAAK3B,UAAY/C,EACZJ,KAAAA,MAAMoD,sBAAsB,YAAa0B,GAGxChD,IAAAA,EAAO,KAAKkB,SAAS,OAAO,GAAO,EAAO,CAC9C,gBACA,wBAEFlB,EAAKhB,iBAAiB,QAAS,WAAM,OAAA,EAAKiE,gBAAgB,UAC1DjD,EAAKqB,UAAY9C,EACZL,KAAAA,MAAMoD,sBAAsB,YAAatB,KA6OlD,CAAA,IAAA,iBAzOE,MAAA,WACQkD,IAAAA,EAAO,KAAKhF,MAAMQ,iBAAiB,kBAErCwE,EAAKvE,OAAS,GAChBuE,EAAKpE,QAAQ,SAACqE,GAAQA,OAAAA,EAAIhB,aAqOhC,CAAA,IAAA,kBAhOE,MAAA,SAAgBiB,GACRjF,IAAAA,EAAa,KAAKA,WAElBkF,GADc,KAAKnF,MAAMyB,cAAc,mBACXJ,QAAQ2C,mBAGxB,SAAdkB,IACEC,EAAe,GAAKlF,EAAWQ,QAA2B,IAAjB0E,EACtC3D,KAAAA,WAAWvB,EAAWkF,EAAe,IAErC3D,KAAAA,WAAWvB,EAAWA,EAAWQ,OAAS,KAKjC,SAAdyE,IACEC,EAAe,EAAIlF,EAAWQ,OAC3Be,KAAAA,WAAWvB,EAAWkF,EAAe,IAErC3D,KAAAA,WAAWvB,EAAW,KAK1B2D,KAAAA,wBAwMT,CAAA,IAAA,WApME,MAAA,SAASwB,GAAUzC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAAOG,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAAOuC,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAC7CC,EAAK/E,SAASgF,cAAiBH,GAAAA,OAAAA,IAiB9BE,OAdH3C,GACF2C,EAAGE,aAAa,MAAU7C,GAAAA,OAAAA,IAKxBG,IACFwC,EAAGjE,QAAQ2C,mBAAqBlB,GAG9BuC,EAAI5E,OAAS,GACf4E,EAAIzE,QAAQ,SAAC2B,GAAS+C,OAAAA,EAAGpE,UAAUiD,IAAI5B,KAGlC+C,IAkLX,CAAA,IAAA,YA9KE,MAAA,WACM,KAAKtF,QACFA,KAAAA,MAAMkB,UAAUiD,IAAI,UAErB,KAAKhE,WACPI,SAASkB,cAAc,QAAQiD,MAAMvE,SAAW,aAyKxD,CAAA,IAAA,aAnKE,MAAA,WAAa,IAAA,EAAA,KACP,KAAKH,QACQ,KAAKA,MAAMQ,iBAAiB,oBAEpCI,QAAQ,SAAC6E,GACdA,OAAAA,EAAM3E,iBAAiB,QAAS,WAC9B,EAAK4E,YAIJA,KAAAA,WAyJX,CAAA,IAAA,QApJE,MAAA,WAEO1F,KAAAA,MAAMkB,UAAU+C,OAAO,UACvBjE,KAAAA,MAAMkB,UAAU+C,OAAO,SAGvB0B,KAAAA,iBAGAnC,KAAAA,gBAGAvD,KAAAA,WAAa,KAGd,KAAKE,WACPI,SAASkB,cAAc,QAAQiD,MAAMvE,SAAW,UAoItD,CAAA,IAAA,aA/HE,MAAA,SAAWU,GAAM,IAQX+E,EARW,EAAA,KAIf/E,EAAKC,iBAAiB,QAAS,WAC7B,EAAKd,MAAMkB,UAAU2E,OAAO,WAI1BC,IAAAA,EAAQ,KAEZjF,EAAKC,iBACH,aACA,SAACiF,GACOC,IAAAA,EAyCDC,SAAWF,GAEhBA,OAAAA,EAAIG,SAAWH,EAAII,cAAcD,QA3CdD,CAAWF,GAAK,GAEnCD,EAAQE,EAAWI,QACnBR,EAASI,EAAWI,UAEtB,GAGFvF,EAAKC,iBACH,YACA,SAACiF,GACCA,EAAIM,iBAEAC,IAAAA,EAAIP,EAAIG,QAAQ,GAAGE,QAEnB,GAACN,EAAD,CAIAS,IAAAA,EAAMR,EAAIG,QAAQ,GAAGE,QACrBI,EAAQV,EAAQS,EAGhBD,EAAI,IAAMV,IACRY,EAAQ,GACV,EAAKzB,gBAAgB,QAEvBe,EAAQ,MAINQ,EAAIV,EAAS,MACXY,EAAQ,GACV,EAAKzB,gBAAgB,QAEvBe,EAAQ,SAGZ,KA2EN,CAAA,IAAA,gBAhEE,MAAA,SAAcR,GAGRmB,IACAC,EACAd,EAFAa,GAAS,EAKbnB,EAAGxE,iBAAiB,QAAS,SAACE,GAC5BsE,EAAGoB,YAAc1F,EAAE2F,OACnBf,EAASN,EAAGoB,aAIdpB,EAAGxE,iBAAiB,YAAa,SAACE,GAChCyF,GAAS,EACTb,EAAS5E,EAAE4F,MACXF,EAAapB,EAAGoB,aAIlBpB,EAAGxE,iBAAiB,aAAc,WAChC2F,GAAS,IAIXnB,EAAGxE,iBAAiB,UAAW,SAACE,GAC9ByF,GAAS,IAIXnB,EAAGxE,iBACD,YACA,SAACE,GACK,GAACyF,EAAD,CAEJzF,EAAEqF,iBAEIC,IAEAO,EAAsB,GAFlB7F,EAAE4F,MAEMhB,GAGlBN,EAAGoB,WAAaA,EAAaG,KAE/B,KAmBN,CAAA,IAAA,wBAdE,MAAA,WACQ5D,IAAAA,EAAU,KAAKjD,MAAMyB,cAAc,sBACnCZ,EAAOoC,EAAQxB,cAAc,kCAEnCwB,EAAQyD,WAAa7F,EAAKiG,WAAmC,KAAtB7D,EAAQwB,gBAUnD,EAzfM3E,GAmfAC,EAAS,CACbG,SAAS,EACTC,UAAU,EACVC,UAAW,KACXC,WAAY,MAEd,IAAIP,EAASC","file":"src.b5c39e0a.js","sourceRoot":"..","sourcesContent":["class LightBox {\n  constructor(config = {}) {\n    this.modal = null;\n    this.groupItems = null;\n    this.preview = config.preview || true;\n    this.overflow = config.overflow || true;\n    this.arrowLeft = config.arrowLeft || \"\";\n    this.arrowRight = config.arrowRight || \"\";\n    this.items = document.querySelectorAll(\"[data-lb-item]\");\n\n    if (this.items.length > 0) this.init();\n  }\n\n  // инициализация\n  init() {\n    // добавляет модальное окно на страницу\n    this.renderModal();\n\n    // слушаем клик по каждому элементу data-lb-item\n    this.items.forEach((item) => {\n      item.addEventListener(\"click\", () => this.itemHandler(item));\n    });\n\n    // слушает событие по клику на ESC и вызывает функцию закрытия модального окна\n    // событие при клике на ESC закрывает модальное окно\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.code === \"Escape\" && this.modal.classList.contains(\"active\")) {\n        this.modalClose();\n      }\n    });\n  }\n\n  // событие по клику на элемент лайтбокса\n  itemHandler(item) {\n    if (!this.modal) return false;\n\n    // если элемент состоит в группе и имя группы не пустая строка\n    if (item.dataset.lbItemGroup && item.dataset.lbItemGroup !== \"\") {\n      this.renderGroupItems(item);\n    } else {\n      // если элементы не в группе\n      this.renderItem(item);\n    }\n  }\n\n  // отрисовка модального окна\n  renderModal() {\n    const body = document.querySelector(\"body\");\n    const html = `\n\t\t <div class=\"modal-lb\">\n\t\t\t <div class=\"modal-lb__inner\">\n\t\t\t     <!-- modal item -->\n\t\t\t\t <div class=\"modal-lb__item-wrap\"></div>\n\t\t\t\t \n\t\t\t\t <!-- modal footer -->\n\t\t\t\t <div class=\"modal-lb__footer\">\n\t\t\t\t     <!-- description -->\n\t\t\t\t    <div class=\"modal-lb__item-desc\"></div>\n\t\t\t\t </div>\n\t\t\t\t \n\t\t\t\t\n\t\t\t </div>\n\t\t\t \n\t\t\t<!-- close button -->\n\t\t\t<div class=\"modal-lb__close modal-lb__close-btn\">&times</div>\n\t\t\t\t \n\t\t\t <!-- close background -->\n\t\t\t <div class=\"modal-lb__close modal-lb__close-bg\"></div>\n\t\t </div>\n\t\t`;\n\n    body.insertAdjacentHTML(\"beforeend\", html);\n\n    // добавляем в свойство элемент модального окна\n    this.modal = document.querySelector(\".modal-lb\");\n\n    // функция закрытия модального окна\n    this.modalClose();\n  }\n\n  // создаем несколько элементов\n  renderGroupItems(item) {\n    const groupName = item.dataset.lbItemGroup;\n    const items = [...this.items];\n    let count = 0;\n    this.groupItems = items.reduce((prev, curr) => {\n      if (curr.dataset.lbItemGroup === groupName) {\n        curr.dataset.lbItemIndex = `${count}`;\n        prev.push(curr);\n        count++;\n      }\n      return prev;\n    }, []);\n\n    // добавление выбранного элемента из группы в модальное окно\n    this.renderItem(item);\n\n    // отрисовка кнопок переключения между изображениями в модальном окне\n    this.renderNextPrev();\n\n    // рендер превью галереи\n    this.renderPreview();\n  }\n\n  // вставляем элемент в modal-lb__item-wrap\n  renderItem(item) {\n    const data = {\n      tagName: item.tagName.toLowerCase(),\n      name: item.dataset.lbItemName || false,\n      description: item.dataset.lbItemDesc || false,\n      src: item.dataset.lbItemSrc || false,\n      group: item.dataset.lbItemGroup || false,\n      index: item.dataset.lbItemIndex || false\n    };\n    const html = this.createEl(data.tagName, data.src, data.index, [\n      \"modal-lb__item\"\n    ]);\n    const wrapper = document.querySelector(\".modal-lb__item-wrap\");\n\n    // добавляем описание к элементу\n    this.renderDescription(data);\n\n    wrapper.innerHTML = \"\";\n    wrapper.insertAdjacentElement(\"afterbegin\", html);\n\n    this.modalShow(data);\n\n    // события при касании\n    this.itemEvents(html);\n  }\n\n  // добавляет описание в верстку для элемента\n  renderDescription(data) {\n    const wrapper = this.modal.querySelector(\".modal-lb__item-desc\");\n    wrapper.innerHTML = \"\";\n\n    // если есть имя то добавить\n    if (data.name) {\n      wrapper.insertAdjacentHTML(\n        \"afterbegin\",\n        ` <div class=\"modal-lb__item-desc-title\">${data.name}</div>`\n      );\n    }\n\n    // если есть описание то добавить\n    if (data.description) {\n      wrapper.insertAdjacentHTML(\n        \"beforeend\",\n        ` <div class=\"modal-lb__item-desc-text\">${data.description}</div>`\n      );\n    }\n  }\n\n  // добавление превью галереи\n  renderPreview() {\n    if (this.preview) {\n      const items = this.groupItems;\n      const modalFooter = this.modal.querySelector(\".modal-lb__footer\");\n\n      // если есть блок превью то удалить этот блок\n      this.removePreview();\n\n      const previews = items\n        .map(\n          (item, index) =>\n            `<div class=\"modal-lb__preview-item\" data-lb-preview-index=\"${index}\" style=\"background-image:url('${item.src}')\"></div>`\n        )\n        .join(\"\");\n      const html = `<div class=\"modal-lb__preview\">${previews}</div>`;\n\n      // добавляем блок превью в футер\n      modalFooter.insertAdjacentHTML(\"beforeend\", html);\n\n      // переключает активный класс превью для текущего элемента в модальном окне\n      this.switchActivePreview();\n\n      // событие при клике на превью\n      this.previewHandler();\n\n      // смещение превью до активного элемента в полосе превью\n      this.scrollToActivePreview();\n    }\n  }\n\n  // добавляет класс active для того элемента который отображается\n  switchActivePreview() {\n    if (this.preview) {\n      const items = this.modal.querySelectorAll(\".modal-lb__preview-item\");\n      const currentItemIndex = this.modal.querySelector(\n        \"[data-lb-current-item-index]\"\n      ).dataset.lbCurrentItemIndex;\n\n      // удаляет у всех превью класс active\n      items.forEach((item) => item.classList.remove(\"active\"));\n\n      // находим элемент превью соответствующий индексу текущего элемента в модальном окне\n      const currentItem = this.modal.querySelector(\n        `[data-lb-preview-index=\"${currentItemIndex}\"]`\n      );\n\n      // добавляем класс active к элементу\n      currentItem.classList.add(\"active\");\n\n      // скролл блока preview до области видимости активного элемента и выравнивание по центру\n      currentItem.scrollIntoView({ behavior: \"smooth\", inline: \"center\" });\n    }\n  }\n\n  // события для элементов превью\n  previewHandler() {\n    const groupItems = this.groupItems;\n    const wrapper = this.modal.querySelector(\".modal-lb__preview\");\n    const previews = wrapper.querySelectorAll(\".modal-lb__preview-item\");\n\n    // при клике на превью переключить основной элемент и переключить активное превью\n    previews.forEach((item) =>\n      item.addEventListener(\"click\", () => {\n        // если элемент на котором был клик не активный (.active)\n        if (!item.classList.contains(\"active\")) {\n          const index = item.dataset.lbPreviewIndex;\n\n          // если кликнули на превью то заменить элемент в модальном окне\n          this.renderItem(groupItems[index]);\n\n          // переключить активный элемент превью на тот который сейчас выводится в коне\n          this.switchActivePreview();\n        }\n      })\n    );\n\n    // если содержимое блока больше области видимости то сделать выравнивание контента по левому краю\n    if (wrapper.clientWidth + 80 < wrapper.scrollWidth) {\n      wrapper.style.justifyContent = \"start\";\n\n      // смещение мышкой и скролл\n      this.previewEvents(wrapper);\n    }\n  }\n\n  // удаляет блок preview\n  removePreview() {\n    const modalFooter = this.modal.querySelector(\".modal-lb__footer\");\n    const modalPreview = modalFooter.querySelector(\".modal-lb__preview\");\n\n    if (modalPreview) modalPreview.remove();\n  }\n\n  // добавляем кнопки переключения в модальное окно\n  renderNextPrev() {\n    const arrowLeft = this.arrowLeft === \"\" ? \"&#x203a;\" : this.arrowLeft;\n    const arrowRight = this.arrowRight === \"\" ? \"&#x2039;\" : this.arrowRight;\n\n    // следующий элемент\n    const next = this.createEl(\"div\", false, false, [\n      \"modal-lb__nav\",\n      \"modal-lb__item-next\"\n    ]);\n    next.addEventListener(\"click\", () => this.nextPrevHandler(\"next\"));\n    next.innerHTML = arrowLeft;\n    this.modal.insertAdjacentElement(\"beforeend\", next);\n\n    // предыдущий элемент\n    const prev = this.createEl(\"div\", false, false, [\n      \"modal-lb__nav\",\n      \"modal-lb__item-prev\"\n    ]);\n    prev.addEventListener(\"click\", () => this.nextPrevHandler(\"prev\"));\n    prev.innerHTML = arrowRight;\n    this.modal.insertAdjacentElement(\"beforeend\", prev);\n  }\n\n  // удаляем кнопки навигации\n  removeNextPrev() {\n    const navs = this.modal.querySelectorAll(\".modal-lb__nav\");\n\n    if (navs.length > 0) {\n      navs.forEach((nav) => nav.remove());\n    }\n  }\n\n  // переключение элементов группы\n  nextPrevHandler(direction) {\n    const groupItems = this.groupItems;\n    const currentItem = this.modal.querySelector(\".modal-lb__item\");\n    const currentIndex = +currentItem.dataset.lbCurrentItemIndex;\n\n    // предыдущий элемент\n    if (direction === \"prev\") {\n      if (currentIndex + 1 <= groupItems.length && currentIndex !== 0) {\n        this.renderItem(groupItems[currentIndex - 1]);\n      } else {\n        this.renderItem(groupItems[groupItems.length - 1]);\n      }\n    }\n\n    // следующий элемент\n    if (direction === \"next\") {\n      if (currentIndex + 1 < groupItems.length) {\n        this.renderItem(groupItems[currentIndex + 1]);\n      } else {\n        this.renderItem(groupItems[0]);\n      }\n    }\n\n    // переключаемся между активным превью\n    this.switchActivePreview();\n  }\n\n  // создаем элемент\n  createEl(selector, src = false, index = false, cls = []) {\n    const el = document.createElement(`${selector}`);\n\n    // если есть src то добавить к элементу\n    if (src) {\n      el.setAttribute(\"src\", `${src}`);\n    }\n\n    // для группы - если есть index (порядковый номер элемента в массиве группы)\n    // то добавить атрибут с индексом\n    if (index) {\n      el.dataset.lbCurrentItemIndex = index;\n    }\n\n    if (cls.length > 0) {\n      cls.forEach((name) => el.classList.add(name));\n    }\n\n    return el;\n  }\n\n  // открыть модальное окно\n  modalShow() {\n    if (this.modal) {\n      this.modal.classList.add(\"active\");\n\n      if (this.overflow) {\n        document.querySelector(\"body\").style.overflow = \"hidden\";\n      }\n    }\n  }\n\n  // закрыть модальное окно\n  modalClose() {\n    if (this.modal) {\n      const closes = this.modal.querySelectorAll(\".modal-lb__close\");\n\n      closes.forEach((close) =>\n        close.addEventListener(\"click\", () => {\n          this.reset();\n        })\n      );\n\n      this.reset();\n    }\n  }\n\n  // сброс параметров элементом модального окна\n  reset() {\n    // удаляем классы у модального окна\n    this.modal.classList.remove(\"active\");\n    this.modal.classList.remove(\"clear\");\n\n    // удаляем кнопки навигации\n    this.removeNextPrev();\n\n    // проверяет если есть превью блок то удаляет этот блок\n    this.removePreview();\n\n    // сброс данных о группе элементов\n    this.groupItems = null;\n\n    // сброс стилей для body\n    if (this.overflow) {\n      document.querySelector(\"body\").style.overflow = \"auto\";\n    }\n  }\n\n  // действия при свайпе\n  itemEvents(item) {\n    // источник https://stackoverflow.com/questions/2264072/detect-a-finger-swipe-through-javascript-on-the-iphone-and-android\n\n    // включение / отключение элементов управления\n    item.addEventListener(\"click\", () => {\n      this.modal.classList.toggle(\"clear\");\n    });\n\n    let startX;\n    let xDown = null;\n\n    item.addEventListener(\n      \"touchstart\",\n      (evt) => {\n        const firstTouch = getTouches(evt)[0];\n\n        xDown = firstTouch.clientX;\n        startX = firstTouch.clientX;\n      },\n      false\n    );\n\n    item.addEventListener(\n      \"touchmove\",\n      (evt) => {\n        evt.preventDefault(); // блокирует скролл при открытом модальном окне на телефоне\n\n        let x = evt.touches[0].clientX;\n\n        if (!xDown) {\n          return;\n        }\n\n        let xUp = evt.touches[0].clientX;\n        let xDiff = xDown - xUp;\n\n        /* left swipe */\n        if (x + 100 < startX) {\n          if (xDiff > 0) {\n            this.nextPrevHandler(\"next\");\n          }\n          xDown = null;\n        }\n\n        /* right swipe */\n        if (x - startX > 100) {\n          if (xDiff < 0) {\n            this.nextPrevHandler(\"prev\");\n          }\n          xDown = null;\n        }\n      },\n      false\n    );\n\n    function getTouches(evt) {\n      return (\n        evt.touches || evt.originalEvent.touches // browser API\n      ); // jQuery\n    }\n  }\n\n  // поведение перетаскиванием мыши\n  previewEvents(el) {\n    //example  https://codepen.io/kasap-victor/pen/NWjGYXv?editors=0010\n\n    let isDown = false;\n    let scrollLeft;\n    let startX;\n\n    // при скролле сдвигает блок влево или право\n    el.addEventListener(\"wheel\", (e) => {\n      el.scrollLeft += e.deltaY;\n      startX = el.scrollLeft;\n    });\n\n    // левая клавиша мышки нажата\n    el.addEventListener(\"mousedown\", (e) => {\n      isDown = true;\n      startX = e.pageX; // начальная позиция курсора относительно документа\n      scrollLeft = el.scrollLeft; // смещение элемента\n    });\n\n    // если курсор вне зоны области превью то остановить перемещение\n    el.addEventListener(\"mouseleave\", () => {\n      isDown = false;\n    });\n\n    // левая клавиша мышки отжата\n    el.addEventListener(\"mouseup\", (e) => {\n      isDown = false;\n    });\n\n    // движение мыши над блоком превью\n    el.addEventListener(\n      \"mousemove\",\n      (e) => {\n        if (!isDown) return;\n\n        e.preventDefault();\n\n        const x = e.pageX; // позиция элемента на документе -> постоянно обновляется при перемещении курсора\n        // startX - начальная позиция курсора относительно документа\n        const walk = (x - startX) * 3; // разница смещения между началом клика и координаты движения Х\n\n        // scrollLeft - значение смещения в момент нажатия кнопки мыши\n        el.scrollLeft = scrollLeft - walk; // меняет смещение элемента в момент движения высчитывая разницу\n      },\n      true\n    );\n  }\n\n  // смещение првеью до элемента который активный\n  scrollToActivePreview() {\n    const wrapper = this.modal.querySelector(\".modal-lb__preview\");\n    const item = wrapper.querySelector(\".modal-lb__preview-item.active\");\n\n    wrapper.scrollLeft = item.offsetLeft - wrapper.scrollWidth * 0.111;\n  }\n}\n\nconst config = {\n  preview: true, // показать миниатюры\n  overflow: true, // включить overflow:hidden для body когда открыта галерея\n  arrowLeft: \"👉\", // стрелка влево\n  arrowRight: \"👈\" // стрелка вправо\n};\nnew LightBox(config);\n"]}